
	/*
	 * Button
	 * @param $txt | String
	 * 		^Description This is what the button will say
	 * 		^Default "Button"
	 * 
	 * @param $link | HyperLink
	 * 		^Description This is where the button will send you
	 * 		^Default "#"
	 * 
	 * @param $Icon | File
	 * 		^Description If you want an Icon, you put it here
	 * 		^Default ""
	 */
    function Button($text='Button', $link='#', $Icon=''){
		// The link needs http:// in order to function correctly
		
		// Now spit it out to the website
	    echo '<a href="' . $link . '" data-role="button" '. $Icon . '>' . $text . '</a>';
	}



	
	/* eventLength()
	 * 
	 * Use this to find the length of the event
	 * @param Start | String
	 *  	^Description This is the start time of the event
	 *  	^Default None
	 * @param End | String
	 *  	^Description This is when the event is done
	 *  	^Default None
	 * @Returns Int
	 *  	^Description This is the length of the event in minutes
	 *  	^Default 50
	 */
	 
	/*
	 * Image Header with Text
	 * @param $Text | String
	 * 		^Description This is what the header will say
	 * 		^Default "Header"
	 * @param $Position | Text
	 * 		^Description Display text on the top or bottom
	 * 		^Values Bottom Top
	 * 		^Default "Bottom"
	 * @param $Logo | file
	 * 		^Description This will display a logo
	 * 		^Default ""
	 * @param $Alt | String
	 * 		^Description This is the alternative text for image
	 * 		^Default ""
	 * todo Need to check to make sure position is either "Top" or "Bottom"
	 */

	function ImagewTextHeader($Text='Header', $Position='Bottom', $Logo='', $Alt=''){
		
		echo '<div data-role="header">';
		if($Logo != '' && $Position='Top'){
			echo '<img src="' . $Logo . '" alt="' . $Alt . '"/>';
		}
		echo '	<h1>' . $Text . '</h1>';
		if($Logo != '' && $Position='Bottom'){
			echo '<img src="' . $Logo . '" alt="' . $Alt . '"/>';
		}
		echo '</div><!-- /header -->';
		
	}
	
	/*
	 * Button
	 * @param $txt | String
	 * 		^Description This is what the button will say
	 * 		^Default "Button"
	 * 
	 * @param $link | HyperLink
	 * 		^Description This is where the button will send you
	 * 		^Default "#"
	 * 
	 * @param $Icon | File
	 * 		^Description If you want an Icon, you put it here
	 * 		^Default ""
	 */
    function Button($text='Button', $link='#', $Icon=''){
		// The link needs http:// in order to function correctly
		
		// Now spit it out to the website
	    echo '<a href="' . $link . '" data-role="button" '. $Icon . '>' . $text . '</a>';
	}
	
	/*
	 * New Page
	 * 		^Description This function easily creates new pages
	 * @param ID | String | Required
	 * 		^Description You need to uniquely identify the page in order to go there!
	 * 		^Default none
	 * @param theme | Character
	 * 		^Description Uses the prebuilt themes that come with jquery mobile
	 * 		^Default b
	 * @param First | Boolean
	 * 		^Description Used to indicate if this is the first page in the current file.
	 * 			defaults to false, since we only need the first page once.
	 * 		^Default false
	 */
	function NewPage($ID, $theme='b', $First='false'){
		if($First=='false'){
			echo '</div>';
			echo '<div data-role="page" id="' . $ID . '" data-theme="' . $theme . '">';
		}else{
			echo '<div data-role="page" id="' . $ID . '" data-theme="' . $theme . '">';
		}
	}
	
	
	/*
	 * Page Top
	 * 	Description Spits out the beginning html tags, and the head
	 */

	function pageTop(){
		echo '<!DOCTYPE html>';
		echo '<html>';
		echo '	<body>';
	}
	/* Page Head
	 * 	Description Spits out the html code needed for the head tag
	 * 		and spits out the top body tag
	 * 	@param	Title | String | Optional
	 * 		Description Changes the title of the document
	 * 		Default 'Title'
	 */
	function pageHead($Title='Title'){
		echo '	<head>';
		echo '		<title>' . $Title . '</title>';
		echo '		<meta name="viewport" content="width=device-width, initial-scale=1">';
		echo '		<link rel="stylesheet" href="http://code.jquery.com/mobile/1.2.0/jquery.mobile-1.2.0.min.css" />';
		echo '		<script src="http://code.jquery.com/jquery-1.8.2.min.js"></script>';
		echo '		<script src="http://code.jquery.com/mobile/1.2.0/jquery.mobile-1.2.0.min.js"></script>';
		echo '		<link rel="stylesheet" href="myStyleSheet.css"/>';
		echo '	</head>';
	}
	
	
		/*
	 * Google Map Header
	 * Description Spits out the code needed to use a map on a web page
	 * 
	 * @param key | String | Optional
	 * 		^Description Used if you want to link the map to an google account with Map API
	 * 		^Default ''
	 * 
	 * @param XMLPath | PHP file | Required
	 * 		^Description This leads to the file that will read a database and convert that
	 * 			information into an xml format
	 * 		^Default ''
	 */
	function googlemapheader($cuskey='', $XMLPath='functions/GoogleMap/xmlgenerator.xml'){
		if(isset($cuskey)){
			$cuskey = 'key=' + $cuskey;
		}
		echo '<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?' . $cuskey . '&sensor=false"></script>';
	    echo<<<EOT
	    <script type="text/javascript">
	    //<![CDATA[
	
	    var customIcons = {
	      restaurant: {
	        icon: 'http://labs.google.com/ridefinder/images/mm_20_blue.png',
	        shadow: 'http://labs.google.com/ridefinder/images/mm_20_shadow.png'
	      },
	      bar: {
	        icon: 'http://labs.google.com/ridefinder/images/mm_20_red.png',
	        shadow: 'http://labs.google.com/ridefinder/images/mm_20_shadow.png'
	      }
	    };
	
	    function load() {
	      var map = new google.maps.Map(document.getElementById("map"), {
	        center: new google.maps.LatLng(47.6145, -122.3418),
	        zoom: 13,
	        mapTypeId: 'roadmap'
	      });
	      var infoWindow = new google.maps.InfoWindow;
EOT;
	      // Change this depending on the name of your PHP file
		echo 'downloadUrl("' . $XMLPath . '", function(data) {';
		echo<<<EOT
	        var xml = data.responseXML;
	        var markers = xml.documentElement.getElementsByTagName("marker");
	        for (var i = 0; i < markers.length; i++) {
	          var name = markers[i].getAttribute("name");
	          var address = markers[i].getAttribute("address");
	          var type = markers[i].getAttribute("type");
	          var point = new google.maps.LatLng(
	              parseFloat(markers[i].getAttribute("lat")),
	              parseFloat(markers[i].getAttribute("lng")));
	          var html = "<b>" + name + "</b> <br/>" + address;
	          var icon = customIcons[type] || {};
	          var marker = new google.maps.Marker({
	            map: map,
	            position: point,
	            icon: icon.icon,
	            shadow: icon.shadow
	          });
	          bindInfoWindow(marker, map, infoWindow, html);
	        }
	      });
	    }
	
	    function bindInfoWindow(marker, map, infoWindow, html) {
	      google.maps.event.addListener(marker, 'click', function() {
	        infoWindow.setContent(html);
	        infoWindow.open(map, marker);
	      });
	    }
	
	    function downloadUrl(url, callback) {
	      var request = window.ActiveXObject ?
	          new ActiveXObject('Microsoft.XMLHTTP') :
	          new XMLHttpRequest;
	
	      request.onreadystatechange = function() {
	        if (request.readyState == 4) {
	          request.onreadystatechange = doNothing;
	          callback(request, request.status);
	        }
	      };
	
	      request.open('GET', url, true);
	      request.send(null);
	    }
	
	    function doNothing() {}
	
	    //]]>
	
	  </script>

EOT;
	}
	
	